$:.unshift(File.expand_path(File.join('..', 'lib'), File.dirname(__FILE__)))
$:.unshift(File.expand_path('lib', File.dirname(__FILE__)))
require 'open3'
require 'gem'

namespace :sample do
  namespace :server do

    $:.unshift(File.expand_path('servers', File.dirname(__FILE__)))

    desc 'Run a sample server with a MySQL backend.'
    task :mysql do |t|
      runner(t.name.split(':').last)
    end

    def config
      @config ||= YAML.load_file(File.expand_path('config.yml', File.dirname(__FILE__)))[@name.to_sym]
    end

    def runner(name)
      @name = name
      require 'dm-core'
      require 'dm-migrations'
      require_on_install 'dm-mysql-adapter'
      DataMapper::Logger.new($stdout, :debug)
      DataMapper.setup(:default, "#{config[:adapter]}://#{config[:user]}:#{config[:password]}@#{config[:host]}:#{config[:port]}/#{config[:database]}")
      require 'models'
      begin
        DataMapper.auto_upgrade!
      rescue Exception => e
        setup_database
        @attempts ||= 0
        @attempts += 1
        @attempts <= 1 ? retry : exit(2)
      end
      DataMapper.finalize
      require 'mysql'
    end

    def setup_database
      print "Password for MySQL root user? "
      pwd = STDIN.gets.chomp.strip
      puts "No root password. You will have to press return at each step." if pwd.empty?

      puts "Testing existence of the '#{config[:database]}' database..."
      db_setup = true
      Open3.popen2("mysql -uroot -p#{pwd} -e \"show databases\\G\"") do |i, out, t|
        t.value
        db_setup = false if out.read =~ /#{config[:database]}/
      end
      if db_setup
        puts "Creating #{config[:database]}..."
        %x{ mysql -uroot -p#{pwd} -e \"create database #{config[:database]}\" }
      else
        puts "OK"
      end
      
      puts "Testing existence of the '#{config[:user]}' user..."
      user_setup = true
      Open3.popen2("mysql -uroot -p#{pwd} -e \"select User from mysql.user where User='#{config[:user]}'\\G\"") do |i, out, t|
        t.value
        user_setup = false if out.read =~ /#{config[:user]}/
      end
      if user_setup
        puts "Creating '#{config[:user]}'..."
        %x{ mysql -uroot -p#{pwd} -e \"create user '#{config[:user]}'@'localhost' identified by '#{config[:password]}'\" }
        puts "Granting '#{config[:user]}' with permissions on '#{config[:database]}'..."
        %x{ mysql -uroot -p#{pwd} -e \"grant all on #{config[:database]}.* to '#{config[:user]}'@'localhost'\" }
      else
        puts "OK"
      end
    end

  end
end

